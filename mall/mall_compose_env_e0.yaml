version: '3'
services:
#  mysql:
#    image: mysql:5.7
#    container_name: mysql
#    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: root #设置root帐号密码
#    ports:
#      - "3306:3306"
#    volumes:
#      - /mydata/mysql/data/db:/var/lib/mysql #数据文件挂载
#      - /mydata/mysql/data/conf:/etc/mysql/conf.d #配置文件挂载
#      - /mydata/mysql/log:/var/log/mysql #日志文件挂载
  redis:
    image: redis:5
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - /mydata/redis/data:/data #数据文件挂载
    ports:
      - 6379:6379
#  nginx:
#    image: nginx:1.10
#    container_name: nginx
#    volumes:
#      - /mydata/nginx/nginx.conf:/etc/nginx/nginx.conf #配置文件挂载
#      - /mydata/nginx/html:/usr/share/nginx/html #静态资源根目录挂载
#      - /mydata/nginx/log:/var/log/nginx #日志文件挂载
#    ports:
#      - "80:80"
  rabbitmq:
    image: rabbitmq:3.7.15-management
    container_name: rabbitmq
    volumes:
      - /mydata/rabbitmq/data:/var/lib/rabbitmq #数据文件挂载
      - /mydata/rabbitmq/log:/var/log/rabbitmq #日志文件挂载
    ports:
      - "5672:5672"
      - "15672:15672"
  # elasticsearch:
  #   image: elasticsearch:7.6.2
  #   container_name: elasticsearch
  #   environment:
  #     - "cluster.name=elasticsearch" #设置集群名称为elasticsearch
  #     - "discovery.type=single-node" #以单一节点模式启动
  #     - "ES_JAVA_OPTS=-Xms128m -Xmx128m" #设置使用jvm内存大小
  #   volumes:
  #     - /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载
  #     - /mydata/elasticsearch/data:/usr/share/elasticsearch/data #数据文件挂载
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"

  elasticsearch0:
    image: elasticsearch:7.6.2
    container_name: elasticsearch0
    privileged: true
    environment:
      - "cluster.name=elasticsearch" #设置集群名称为elasticsearch
      - "node.name=node0" #节点名称
      - "node.master=true" #是否为主节点
      - "node.data=true" #改节点是否存储数据
      - "bootstrap.memory_lock=true" 
      #- "http.port=9200" # 对外开放的http端口
      - "http.cors.enabled=true" # 是否运行跨域REST请求
      - "http.cors.allow-origin=*"
      #- "network.host=0.0.0.0"
      - "cluster.initial_master_nodes=node0"
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m" #设置使用jvm内存大小
      #- "discovery.type=single-node" #以单一节点模式启动
      - "discovery.zen.ping.unicast.hosts=elasticsearch0,elasticsearch1,elasticsearch2"
      - "discovery.zen.minimum_master_nodes=1"
    volumes:
      - /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载
      - /mydata/elasticsearch/node0/data:/usr/share/elasticsearch/data #数据文件挂载
    ports:
      - "9200:9200"
      - "9300:9300"
  elasticsearch1:
    image: elasticsearch:7.6.2
    container_name: elasticsearch1
    privileged: true
    environment:
      - "cluster.name=elasticsearch" #设置集群名称为elasticsearch
      - "node.name=node1" #节点名称
      - "node.master=false" #是否为主节点
      - "node.data=true" #改节点是否存储数据
      - "bootstrap.memory_lock=true" 
      #- "http.port=9200" # 对外开放的http端口
      - "http.cors.enabled=true" # 是否运行跨域REST请求
      - "http.cors.allow-origin=*"
      #- "network.host=0.0.0.0"
      - "cluster.initial_master_nodes=node0"
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m" #设置使用jvm内存大小
      #- "discovery.type=single-node" #以单一节点模式启动
      - "discovery.zen.ping.unicast.hosts=elasticsearch0,elasticsearch1,elasticsearch2"
      - "discovery.zen.minimum_master_nodes=1"
    volumes:
      - /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载
      - /mydata/elasticsearch/node1/data:/usr/share/elasticsearch/data #数据文件挂载
    ports:
      - "9200:9200"
      - "9300:9300"

  logstash:
    image: logstash:7.6.2
    container_name: logstash
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /mydata/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf #挂载logstash的配置文件
    depends_on:
      - elasticsearch0 #kibana在elasticsearch启动之后再启动
    links:
      - elasticsearch0:es #可以用es这个域名访问elasticsearch服务
    ports:
      - "4560:4560"
      - "4561:4561"
      - "4562:4562"
      - "4563:4563"
  kibana:
    image: kibana:7.6.2
    container_name: kibana
    links:
      - elasticsearch0:es #可以用es这个域名访问elasticsearch服务
    depends_on:
      - elasticsearch0 #kibana在elasticsearch启动之后再启动
    environment:
      - "elasticsearch.hosts=http://es:9200" #设置访问elasticsearch的地址
    ports:
      - "5601:5601"
  mongo:
    image: mongo:4.2.5
    container_name: mongo
    volumes:
      - /mydata/mongo/db:/data/db #数据文件挂载
    ports:
      - "27017:27017"
  sentinel:
    container_name: sentinel-dashboard
    image: sentinel-dashboard:1.8.0
    restart: always
    environment:
      JAVA_OPTS: "-Dserver.port=8080 -Dcsp.sentinel.dashboard.server=localhost:8080 -Dproject.name=sentin
el-dashboard -Djava.security.egd=file:/dev/./urandom -Dcsp.sentinel.api.port=8719"
    ports: #避免出现端口映射错误，建议采用字符串格式 8080端口为Dockerfile中EXPOSE端口
      - "8080:8080"
      - "8719:8719"
    volumes:
      - ./root/logs:/root/logs